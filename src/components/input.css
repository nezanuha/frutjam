@utility input-size {
  padding-inline: var(--input-inline);
  padding-block: var(--input-block);
  font-size: var(--input-text-size);
}

@utility input-xs {
  --input-inline: 0.475rem;
  --input-block: 0.375rem;
  --input-text-size: 0.75rem;
  @reference input-size;
}

@utility input-sm {
  --input-inline: 0.6rem;
  --input-block: 0.5rem;
  --input-text-size: 0.875rem;
  @reference input-size;
}

@utility input-md {
  --input-inline: 0.75rem;
  --input-block: 0.625rem;
  --input-text-size: 1rem;
  @reference input-size;
}

@utility input-lg {
  --input-inline: 0.9rem;
  --input-block: 0.75rem;
  --input-text-size: 1rem;
  @reference input-size;
}

@utility input-xl {
  --input-inline: 1rem;
  --input-block: 0.875rem;
  --input-text-size: 1rem;
  @reference input-size;
}

@utility input-2xl {
  --input-inline: 1.25rem;
  --input-block: 1rem;
  --input-text-size: 1.025rem;
  @reference input-size;
}

@utility input-dashed {
  &:not(.input-active) {
    outline-width: 1px;
    outline-style: dashed;
  }
}

@utility input-outline {
  &:not(.input-active) {
    outline-width: 1px;
    outline-style: solid;
  }
}

@utility input-soft {
  &:not(.input-active) {
    background-color: light-dark(
      var(--input-100),
      color-mix(in oklab, var(--input-900) 10%, transparent)
    );
    color: light-dark(var(--input-800), var(--input-400));
  }
}

@utility input-ghost {
  &:not(.input-active) {
    outline-color: transparent;
  }
}

@utility input {
  @reference input-md;

  display: inline-flex;
  align-self: flex-start;
  flex-shrink: 0;
  align-items: center;
  appearance: none;
  border-radius: var(--radius-input);
  gap: 0.5rem;
  vertical-align: middle;
  white-space: nowrap;
  position: relative;
  font-weight: 500;
  padding-inline: 0.625rem;
  transition:
    border-color 300ms,
    outline-color 300ms;

  &::placeholder {
    font-size: var(--input-text-size);
    color: light-dark(var(--core-300), var(--core-700));
  }

  &::file-selector-button {
    font-size: var(--input-text-size);
    margin-right: 1rem;
    display: inline-flex;
    transition:
      border-color 300ms,
      background-color 300ms,
      display 300ms;
    align-items: center;
    border-radius: calc(var(--radius-input) / 2);
    background-color: light-dark(var(--input-100), var(--input-800));
    border: 1px solid light-dark(var(--input-200), var(--input-900));
    font-weight: semibold;
    color: light-dark(var(--input-800), var(--input-400));
    padding-block: calc(var(--input-block) / 6);
    padding-inline: calc(var(--input-inline) / 2);

    @media (hover: hover) {
      &:hover {
        color: light-dark(var(--input-900), var(--input-300));
        background-color: light-dark(var(--input-200), var(--input-700));
      }
    }
  }

  &:not(
      .input-primary,
      .input-secondary,
      .input-accent,
      .input-info,
      .input-success,
      .input-warning,
      .input-error
    ) {
    outline: 1px solid light-dark(var(--input-400), var(--input-700));
    border: 0.5px solid light-dark(var(--input-50), var(--input-900));
  }

  &:is(
      .input-primary,
      .input-secondary,
      .input-accent,
      .input-info,
      .input-success,
      .input-warning,
      .input-error
    ) {
    outline: 1px solid var(--input-700);
    border: 0.5px solid light-dark(var(--input-50), var(--input-900));
  }

  &:is(:disabled, [disabled], .input-disabled) {
    cursor: not-allowed;
    color: var(--input-50);
    background-color: light-dark(var(--input-100), var(--input-900));

    &::placeholder {
      color: var(--input-200);
    }
  }

  &:focus,
  &:focus-within {
    isolation: isolate;
    &:is(
        .input-primary,
        .input-secondary,
        .input-accent,
        .input-info,
        .input-success,
        .input-warning,
        .input-error
      ) {
      outline-color: var(--input-800);
      border-color: light-dark(var(--input-200), var(--input-950));
    }

    &:not(
        .input-primary,
        .input-secondary,
        .input-accent,
        .input-info,
        .input-success,
        .input-warning,
        .input-error
      ) {
      outline-color: var(--input-800);
      border-color: light-dark(var(--input-200), var(--input-600));
    }
  }

  --input-50: var(--default-50);
  --input-100: var(--default-100);
  --input-200: var(--default-200);
  --input-300: var(--default-300);
  --input-400: var(--default-400);
  --input-500: var(--default-500);
  --input-600: var(--default-600);
  --input-700: var(--default-700);
  --input-800: var(--default-800);
  --input-900: var(--default-900);
  --input-950: var(--default-950);
}

@utility input-primary {
  --input-50: var(--primary-50);
  --input-100: var(--primary-100);
  --input-200: var(--primary-200);
  --input-300: var(--primary-300);
  --input-400: var(--primary-400);
  --input-500: var(--primary-500);
  --input-600: var(--primary-600);
  --input-700: var(--primary-700);
  --input-800: var(--primary-800);
  --input-900: var(--primary-900);
  --input-950: var(--primary-950);
}

@utility input-secondary {
  --input-50: var(--secondary-50);
  --input-100: var(--secondary-100);
  --input-200: var(--secondary-200);
  --input-300: var(--secondary-300);
  --input-400: var(--secondary-400);
  --input-500: var(--secondary-500);
  --input-600: var(--secondary-600);
  --input-700: var(--secondary-700);
  --input-800: var(--secondary-800);
  --input-900: var(--secondary-900);
  --input-950: var(--secondary-950);
}

@utility input-accent {
  --input-50: var(--accent-50);
  --input-100: var(--accent-100);
  --input-200: var(--accent-200);
  --input-300: var(--accent-300);
  --input-400: var(--accent-400);
  --input-500: var(--accent-500);
  --input-600: var(--accent-600);
  --input-700: var(--accent-700);
  --input-800: var(--accent-800);
  --input-900: var(--accent-900);
  --input-950: var(--accent-950);
}

@utility input-info {
  --input-50: var(--info-50);
  --input-100: var(--info-100);
  --input-200: var(--info-200);
  --input-300: var(--info-300);
  --input-400: var(--info-400);
  --input-500: var(--info-500);
  --input-600: var(--info-600);
  --input-700: var(--info-700);
  --input-800: var(--info-800);
  --input-900: var(--info-900);
  --input-950: var(--info-950);
}

@utility input-success {
  --input-50: var(--success-50);
  --input-100: var(--success-100);
  --input-200: var(--success-200);
  --input-300: var(--success-300);
  --input-400: var(--success-400);
  --input-500: var(--success-500);
  --input-600: var(--success-600);
  --input-700: var(--success-700);
  --input-800: var(--success-800);
  --input-900: var(--success-900);
  --input-950: var(--success-950);
}

@utility input-warning {
  --input-50: var(--warning-50);
  --input-100: var(--warning-100);
  --input-200: var(--warning-200);
  --input-300: var(--warning-300);
  --input-400: var(--warning-400);
  --input-500: var(--warning-500);
  --input-600: var(--warning-600);
  --input-700: var(--warning-700);
  --input-800: var(--warning-800);
  --input-900: var(--warning-900);
  --input-950: var(--warning-950);
}

@utility input-error {
  --input-50: var(--error-50);
  --input-100: var(--error-100);
  --input-200: var(--error-200);
  --input-300: var(--error-300);
  --input-400: var(--error-400);
  --input-500: var(--error-500);
  --input-600: var(--error-600);
  --input-700: var(--error-700);
  --input-800: var(--error-800);
  --input-900: var(--error-900);
  --input-950: var(--error-950);
}
