@utility divider-x {
    &:not(:empty) {
        @apply gap-x-2;
    }
    &::before, &::after {
        @apply w-full h-[0.5px];
    }

    @media print {
        &::before,
        &::after {
            border-left: 0.5px solid var(--divider-color);
        }
    }
}

@utility divider-x-solid {
    @apply divider-x;
    &::before, &::after {
        background: light-dark(
            var(--divider-color),
            color-mix(in oklab, var(--divider-color) 60%, transparent)
        );
    }
}

@utility divider-x-dashed {
    @apply divider-x;
    &::before, &::after {
        background: repeating-linear-gradient(
            to right,
            var(--divider-color) 0,
            var(--divider-color) 5px,
            transparent 5px,
            transparent 10px
        );
    }
}
/* Container with two sections and a vertical divider in between.

‚úÖ This will work correctly when:
    - You set a fixed height on `.container` (e.g. height: 200px), OR
    - You set `height: 100%` on `.container` **AND**
    all parent elements (including html and body) also have `height: 100%`

‚ö†Ô∏è If you use `height: 100%` but the parent elements do not have defined height,
    the vertical divider will collapse because 100% of "auto" is meaningless in CSS.

üí° Best practice:
    Use fixed height for predictable layouts.
    Use 100% height only if you're sure the full layout chain supports it. */


@utility divider-y {
    @apply flex-col;
    &:not(:empty) {
        @apply gap-y-2;
    }
    &::before, &::after {
        @apply w-[0.5px] flex-1;
    }

    @media print {
        &::before,
        &::after {
            border-left: 0.5px solid var(--divider-color);
        }
    }
}

@utility divider-y-solid {
    @apply divider-y;
    &::before, &::after {
        background: light-dark(
            var(--divider-color),
            color-mix(in oklab, var(--divider-color) 60%, transparent)
        );
    }
}

@utility divider-y-dashed {
    @apply divider-y;
    &::before, &::after {
        background: repeating-linear-gradient(
            to bottom,
            var(--divider-color) 0,
            var(--divider-color) 5px,
            transparent 5px,
            transparent 10px
        );
    }
}

@utility divider-core {
    @apply divider-x-solid flex items-center justify-center h-full;

    &::before, &::after {
        @apply content-[''];
        /* background: repeating-linear-gradient(
            to bottom,
            black 0,
            black 5px,
            transparent 5px,
            transparent 10px
          ); */
        /* background-color: light-dark(
            var(--divider-color),
            color-mix(in oklab, var(--divider-color) 60%, transparent)
        ); */
    }
}


@utility divider {
    --divider-color: var(--default-300);
    @apply divider-core;
}
    
@utility divider-primary {
    --divider-color: var(--primary-700);
    @apply divider-core;
}
    
@utility divider-secondary {
    --divider-color: var(--secondary-700);
    @apply divider-core;
}
    
@utility divider-accent {
    --divider-color: var(--accent-700);
    @apply divider-core;
}
    
    
@utility divider-info {
    --divider-color: var(--info-700);
    @apply divider-core;
}
    
@utility divider-success {
    --divider-color: var(--success-700);
    @apply divider-core;
}
    
@utility divider-warning {
    --divider-color: var(--warning-700);
    @apply divider-core;
}
    
@utility divider-error {
    --divider-color: var(--error-700);
    @apply divider-core;
}